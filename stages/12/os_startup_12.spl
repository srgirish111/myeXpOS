//shared_lib
loadi(63,13);
loadi(64,14);

//init
loadi(65,7);
loadi(66,8);

//int10
loadi(22,35);
loadi(23,36);

//exhandler
loadi(2, 15);
loadi(3, 16);

//idle
loadi(69,11);
loadi(70,12);

//timer
loadi(4, 17);
loadi(5, 18);

//int7
loadi(16,29);
loadi(17,30);

PTBR=PAGE_TABLE_BASE;  //as PID of idle process is 0

//Library
[PTBR+0] = -1;
[PTBR+1] = "0000";
[PTBR+2] = -1;
[PTBR+3] = "0000";

//Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

//Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = 70;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";


//IDLE
[PROCESS_TABLE + 1] =0;       //idle PID
[PROCESS_TABLE + 4] = CREATED;  //idle State
[PROCESS_TABLE + 11] =82; //USER AREA PAGE TABLE IDLE
[PROCESS_TABLE + 12] =0; //KPTR 
[PROCESS_TABLE + 13] =8*512; //UPTR USER STACK POINTER
[PROCESS_TABLE + 14] =PAGE_TABLE_BASE;
[PROCESS_TABLE + 15] =10;
[81 * 512] = [69*512 + 1];




PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

SP = 8*512;

[76*512] = [65 * 512 + 1];

//INIT
[PROCESS_TABLE +  1+16] =1;  //init PID
[PROCESS_TABLE +  4+16] = RUNNING;  //init State
[PROCESS_TABLE + 11+16] =83; //USER AREA PAGE TABLE INIT
[PROCESS_TABLE + 12+16] =0; //KPTR 
[PROCESS_TABLE + 13+16] =8*512; //UPTR USER STACK POINTER
[PROCESS_TABLE + 14+16] =PTBR;
[PROCESS_TABLE + 15+16] =PTLR;


[SYSTEM_STATUS_TABLE + 1] = 1; //AS PID OF INIT IS 1


ireturn;
