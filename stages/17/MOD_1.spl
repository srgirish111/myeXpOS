//PROCESS_MANAGER
alias functionNum R1;
alias currentPID R2;

if( functionNum==FREE_USER_AREA_PAGE ) then
  alias usrarpage R3;
  usrarpage = [PROCESS_TABLE +16*currentPID +11];
  //breakpoint;
  multipush(R1,R2,R3);
  R1= RELEASE_PAGE;
  R2=R3;
  call MEMORY_MANAGER;
  multipop(R1,R2,R3);
  //breakpoint;
  return;
endif ;

if( functionNum==EXIT_PROCESS ) then
     multipush(R1,R2,R3);
     R1= FREE_PAGE_TABLE;
     R2=currentPID;
     call PROCESS_MANAGER;
     multipop(R1,R2,R3);

     multipush(R1,R2,R3);
     R1= FREE_USER_AREA_PAGE;
     R2=currentPID;
     call PROCESS_MANAGER;
     multipop(R1,R2,R3);

     [PROCESS_TABLE + 16*currentPID +4] =TERMINATED;
     return;
endif;

if( functionNum ==FREE_PAGE_TABLE ) then
    [PTBR+0] = -1;
    [PTBR+1] = "0000";
    [PTBR+2] = -1;
    [PTBR+3] = "0000";

    alias counter R1;
    counter =0;
    while( counter <20 ) do
       if( [PTBR + counter]!=-1 ) then
          R2=[PTBR+counter];
          multipush(R1,R2,R3);
          R1= RELEASE_PAGE;
          call MEMORY_MANAGER;
          multipop(R1,R2,R3);
          [PTBR + counter] =-1;
          [PTBR + counter +1]="0000";
       endif ;
          counter =counter+2;
    endwhile ;

    return;
endif ;

