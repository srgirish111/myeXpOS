alias functionNum R1;
alias currentPID R2;

if( functionNum ==GET_FREE_PAGE ) then
    //breakpoint;
    [SYSTEM_STATUS_TABLE +3] =[SYSTEM_STATUS_TABLE +3] +1;
    
    while( [SYSTEM_STATUS_TABLE+2]==0 ) do
        [PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1] + 4]=WAIT_MEM;
        multipush(R1, R2);
        call CONTEXT_SWITCH;
        multipop(R1, R2);
    endwhile ;
    [SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]-1;//memfreecount
    [SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]-1;//waitmemcount
   
    alias counter R2;
    counter =76;
    while( counter <MAX_MEM_PAGE ) do
       if( [MEMORY_FREE_LIST+counter]==0 ) then
            [MEMORY_FREE_LIST+counter]=1;
            R0 =counter;
            return;
       endif ;
        counter = counter+1;
    endwhile ;

    //breakpoint;
    R0 =-1;

    return;
endif ;

if( functionNum == RELEASE_PAGE) then
   // breakpoint;
    [MEMORY_FREE_LIST +R2] =[MEMORY_FREE_LIST +R2] -1;
    [SYSTEM_STATUS_TABLE+2] =[SYSTEM_STATUS_TABLE+2]+1;
    alias counter R4;
    counter = 0;

    while(counter < MAX_PROC_NUM) do
        if([PROCESS_TABLE + 16*counter + 4] == WAIT_MEM) then
            [PROCESS_TABLE + 16*counter + 4] = READY;
        endif;
        counter = counter + 1;
    endwhile;
   // breakpoint;
   return;
endif ;

return;