//shared_lib
loadi(63,13);
loadi(64,14);

//init
loadi(65,7);
loadi(66,8);

//mod0
loadi(40,53);
loadi(41,54);

//mod1,Process Manager
loadi(42, 55);
loadi(43, 56);

//mod2,Memory Manager
loadi(44, 57);
loadi(45, 58);

//mod4
loadi(48,61);
loadi(49,62);

//mod5
loadi(50,63);
loadi(51,64);

//inode table
loadi (59, 3);
loadi (60, 4);

//disk interrupt
loadi(6,19);
loadi(7,20);
[DISK_STATUS_TABLE+0] =0;

//disk free list
loadi(61,2);

//int1_terminal
loadi(8,21);
loadi(9,22);

//exhandler
loadi(2, 15);
loadi(3, 16);

//timer
loadi(4, 17);
loadi(5, 18);

//int6
loadi(14,27);
loadi(15,28);
//int7
loadi(16,29);
loadi(17,30);

//INT8
loadi(18,31);
loadi(19,32);

//int9
loadi(20, 33);
loadi(21, 34);

//int10
loadi(22,35);
loadi(23,36);

//int 11
loadi(24,37);
loadi(25,38);

//int 13
loadi(28,41);
loadi(29,42);

//int 14
loadi(30,43);
loadi(31,44);

//int 15
loadi(32,45);
loadi(33,46);

alias counter R1;

counter = 0;
while (counter < 83) do
    [MEMORY_FREE_LIST + counter] = 1;
    counter = counter + 1;
endwhile;

while (counter < 128) do
    [MEMORY_FREE_LIST + counter] = 0;
    counter = counter + 1;
endwhile;

counter =0 ;

while(counter < MAX_SEM_COUNT) do
    [SEMAPHORE_TABLE + 4*counter ]= -1;
    [SEMAPHORE_TABLE + 4*counter+1 ]= 0;
    counter = counter+1;
endwhile;

[SYSTEM_STATUS_TABLE + 3] = 0; 
[SYSTEM_STATUS_TABLE + 2] = 45; 

[TERMINAL_STATUS_TABLE+0] =0;

PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

[76*512] = [65 * 512 + 1];

//INIT
[PROCESS_TABLE +  1+16] =1;  //init PID
[PROCESS_TABLE +  4+16] = CREATED;  //init State
[PROCESS_TABLE + 11+16] =80; //USER AREA PAGE TABLE INIT
[PROCESS_TABLE + 12+16] =0; //KPTR 
[PROCESS_TABLE + 13+16] =8*512; //UPTR USER STACK POINTER
[PROCESS_TABLE + 14+16] =PTBR;
[PROCESS_TABLE + 15+16] =PTLR;




[PROCESS_TABLE + 2*16 + 4] =TERMINATED; 
[PROCESS_TABLE + 3*16 + 4] =TERMINATED; 
[PROCESS_TABLE + 4*16 + 4] =TERMINATED; 
[PROCESS_TABLE + 5*16 + 4] =TERMINATED; 
[PROCESS_TABLE + 6*16 + 4] =TERMINATED; 
[PROCESS_TABLE + 7*16 + 4] =TERMINATED; 
[PROCESS_TABLE + 8*16 + 4] =TERMINATED; 
[PROCESS_TABLE + 9*16 + 4] =TERMINATED; 
[PROCESS_TABLE + 10*16 + 4] =TERMINATED; 
[PROCESS_TABLE + 11*16 + 4] =TERMINATED; 
[PROCESS_TABLE + 12*16 + 4] =TERMINATED; 
[PROCESS_TABLE + 13*16 + 4] =TERMINATED; 
[PROCESS_TABLE + 14*16 + 4] =TERMINATED; 
[PROCESS_TABLE + 15*16 + 4] =TERMINATED; 

return;