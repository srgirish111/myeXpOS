alias process_table R1;
alias userSP R2;

process_table = PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16;
[process_table + 13] = SP;              
userSP = SP;

SP = [process_table + 11]*512 - 1;                  

alias syscall R3;
syscall = [[PTBR + 2 * ((userSP - 5) / 512)] * 512 + (userSP - 5) % 512];

alias ret_adr R4;
ret_adr = [PTBR + 2 * ((userSP - 1) / 512)] * 512 + (userSP - 1) % 512;



if( syscall == INT_OPEN) then
    [process_table + 9] = INT_OPEN;                 

    alias filename R5;
    filename = [[PTBR + 2 * ((userSP - 4) / 512)] * 512 + (userSP - 4) % 512];

    alias resource_table R6;
    resource_table = [process_table + 11]*512 + RESOURCE_TABLE_OFFSET;

    alias i R7;
    i = 0;

    while(i < 8) do
        if([resource_table + 2*i] == -1) then
            break;
        endif;
        i = i + 1;
    endwhile;

    // no entry  found
    if(i == 8) then
        [ret_adr] = -3;
        SP = userSP;
        [process_table + 9] = 0;        
        ireturn;
    endif;

    alias free_entry R8;
    free_entry = i;

    //OPEN FUNCTION

    multipush(R1,R2,R3,R4,R5,R6,R7,R8);
    R1 = OPEN;
    R2 = filename;
    call FILE_MANAGER;
    multipop(R1,R2,R3,R4,R5,R6,R7,R8);

    alias open_file_entry R9;
    open_file_entry = R0;

    if(open_file_entry == -1) then              
        [ret_adr] = -1;
        SP = userSP;
        [process_table + 9] = 0;
        ireturn;
    endif;

    if(open_file_entry == -2) then
        [ret_adr] = -2;
        SP = userSP;
        [process_table + 9] = 0;
        ireturn;
    endif;

    

    [resource_table + 2*free_entry] = FILE;
    [resource_table + 2*free_entry + 1] = open_file_entry;

    [ret_adr] = free_entry;
    SP = userSP;
    [process_table + 9] = 0;
    ireturn;
endif;




if(syscall == INT_CLOSE) then
    [process_table + 9] = INT_CLOSE;

    alias file_entry R5;
    file_entry = [[PTBR + 2*((userSP-4)/512)]*512 + (userSP-4)%512];

    alias resource_table R6;
    resource_table = [process_table + 11]*512 + RESOURCE_TABLE_OFFSET;

    if(file_entry < 0 || file_entry > 7 || [resource_table + 2*file_entry] != FILE) then
        [ret_adr] = -1;
        SP = userSP;
        [process_table + 9] = 0;
        ireturn;
    endif;

    alias file_table_entry R7;
    file_table_entry = [resource_table + 2*file_entry + 1];

    backup;
    R1 = CLOSE;
    R2 = file_table_entry;
    call FILE_MANAGER;
    restore;

    [resource_table + 2*file_entry] = -1;
    [resource_table + 2*file_entry + 1] = -1;

    [ret_adr] = 0;
    SP = userSP;
    [process_table + 9] = 0;
    ireturn;
endif;